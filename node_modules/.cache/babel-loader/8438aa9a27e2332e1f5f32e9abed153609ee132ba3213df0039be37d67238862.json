{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport { mapState } from 'vuex';\nimport router from '@/router';\nimport jobtab from \"../job-list/jobTab.vue\";\nimport similarJobs from \"./similarJobs.vue\";\nexport default {\n  components: {\n    jobtab,\n    similarJobs\n  },\n  props: ['id'],\n  computed: {\n    ...mapState({\n      jobs: state => state.jobs.jobs.find(job => {\n        if (parseInt(router.currentRoute._rawValue.params.id) === job.id) return job;\n      }),\n      jobslist: state => state.jobs.jobs\n    })\n  },\n  methods: {\n    getImgUrl(filename) {\n      var images = require.context('../../../assets/images/job-search/', false, /\\.jpg$/);\n      return images('./' + filename);\n    },\n    stars(count) {\n      var stars = '';\n      for (var i = 0; i < 5; i++) {\n        if (count > i) {\n          stars = stars + '<i class=\"fa fa-star font-warning\"></i>';\n        } else {\n          stars = stars + '<i class=\"fa fa-star font-warning-o\"></i>';\n        }\n      }\n      return stars;\n    }\n  }\n};","map":{"version":3,"names":["mapState","router","jobtab","similarJobs","components","props","computed","jobs","state","find","job","parseInt","currentRoute","_rawValue","params","id","jobslist","methods","getImgUrl","filename","images","require","context","stars","count","i"],"sources":["D:\\Wrenix\\Spring-Sfa\\Cuba\\template\\template\\src\\pages\\job\\job_details\\job_details.vue"],"sourcesContent":["<template>\n    <BreadCrumbs title=\"Job Detail\" main=\"Job Search\" />\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <jobtab />\n            <div class=\"col-xl-9 xl-60 text-start\">\n                <div class=\"card\">\n                    <div class=\"job-search\">\n                        <div class=\"card-body\">\n                            <div class=\"media\"><img class=\"img-40 img-fluid m-r-20\" :src=\"getImgUrl(jobs.image)\" alt=\"\">\n                                <div class=\"media-body\">\n                                    <h6 class=\"f-w-600\">\n                                        <router-link :to=\"{ name: 'jobdetails', params: { id: jobs.id } }\">{{ jobs.title\n                                        }}</router-link>\n                                        <span class=\"pull-right\">\n                                            <router-link :to=\"{ name: 'jobapply', params: { id: jobs.id } }\"\n                                                class=\"btn btn-primary\">Apply for this job</router-link>\n                                        </span>\n                                    </h6>\n                                    <p>{{ jobs.company }} <span>{{ jobs.city }}, {{ jobs.country }} </span><span\n                                            v-html=\"stars(jobs.stars)\"></span></p>\n                                </div>\n                            </div>\n                            <div class=\"job-description\">\n                                <h6>Job Description</h6>\n                                <p v-html=\"jobs.description\"></p>\n                            </div>\n                            <div class=\"job-description\">\n                                <h6>Responsibilities</h6>\n                                <ul>\n                                    <li v-for=\"(r, index) in jobs.resp\" :key=\"index\" v-text=\"r.title\"></li>\n                                </ul>\n                            </div>\n                            <div class=\"job-description\">\n                                <h6>Requirements</h6>\n                                <ul>\n                                    <li v-for=\"(rq, index) in jobs.reqs\" :key=\"index\" v-text=\"rq.title\"></li>\n                                </ul>\n                            </div>\n                            <div class=\"job-description\">\n                                <h6>Required Skills</h6>\n                                <ul>\n                                    <li>Proficient understanding of web markup, including HTML5, CSS3</li>\n                                    <li v-for=\"(ski, index) in jobs.skills\" :key=\"index\" v-text=\"ski.title\"></li>\n                                </ul>\n                            </div>\n                            <div class=\"job-description\">\n                                <button class=\"btn btn-primary m-r-10\" type=\"button\"><span><i\n                                            class=\"fa fa-check\"></i></span> Save this job</button>\n                                <button class=\"btn btn-primary \" type=\"button\"><span><i class=\"fa fa-share-alt\"></i></span>\n                                    Share</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <similarJobs />\n\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport { mapState } from 'vuex';\nimport router from '@/router';\nimport jobtab from \"../job-list/jobTab.vue\"\nimport similarJobs from \"./similarJobs.vue\"\nexport default {\n    components: {\n        jobtab,\n        similarJobs\n    },\n    props: ['id'],\n    computed: {\n        ...mapState({\n            jobs: state => state.jobs.jobs.find(job => {\n                if (parseInt(router.currentRoute._rawValue.params.id) === job.id)\n                    return job;\n            }),\n            jobslist: state => state.jobs.jobs,\n        })\n    },\n    methods: {\n        getImgUrl(filename) {\n            var images = require.context('../../../assets/images/job-search/', false, /\\.jpg$/);\n            return images('./' + filename);\n        },\n        stars(count) {\n            var stars = '';\n            for (var i = 0; i < 5; i++) {\n                if (count > i) {\n                    stars = stars + '<i class=\"fa fa-star font-warning\"></i>';\n                } else {\n                    stars = stars + '<i class=\"fa fa-star font-warning-o\"></i>';\n                }\n            }\n            return stars;\n        }\n    }\n}\n</script>"],"mappings":";;AA8DA,SAASA,QAAO,QAAS,MAAM;AAC/B,OAAOC,MAAK,MAAO,UAAU;AAC7B,OAAOC,MAAK,MAAO,wBAAuB;AAC1C,OAAOC,WAAU,MAAO,mBAAkB;AAC1C,eAAe;EACXC,UAAU,EAAE;IACRF,MAAM;IACNC;EACJ,CAAC;EACDE,KAAK,EAAE,CAAC,IAAI,CAAC;EACbC,QAAQ,EAAE;IACN,GAAGN,QAAQ,CAAC;MACRO,IAAI,EAAEC,KAAI,IAAKA,KAAK,CAACD,IAAI,CAACA,IAAI,CAACE,IAAI,CAACC,GAAE,IAAK;QACvC,IAAIC,QAAQ,CAACV,MAAM,CAACW,YAAY,CAACC,SAAS,CAACC,MAAM,CAACC,EAAE,MAAML,GAAG,CAACK,EAAE,EAC5D,OAAOL,GAAG;MAClB,CAAC,CAAC;MACFM,QAAQ,EAAER,KAAI,IAAKA,KAAK,CAACD,IAAI,CAACA;IAClC,CAAC;EACL,CAAC;EACDU,OAAO,EAAE;IACLC,SAASA,CAACC,QAAQ,EAAE;MAChB,IAAIC,MAAK,GAAIC,OAAO,CAACC,OAAO,CAAC,oCAAoC,EAAE,KAAK,EAAE,QAAQ,CAAC;MACnF,OAAOF,MAAM,CAAC,IAAG,GAAID,QAAQ,CAAC;IAClC,CAAC;IACDI,KAAKA,CAACC,KAAK,EAAE;MACT,IAAID,KAAI,GAAI,EAAE;MACd,KAAK,IAAIE,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;QACxB,IAAID,KAAI,GAAIC,CAAC,EAAE;UACXF,KAAI,GAAIA,KAAI,GAAI,yCAAyC;QAC7D,OAAO;UACHA,KAAI,GAAIA,KAAI,GAAI,2CAA2C;QAC/D;MACJ;MACA,OAAOA,KAAK;IAChB;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}