{"ast":null,"code":"let eventGuid = 0;\nlet todayStr = new Date().toISOString().replace(/T.*$/, '');\nexport const INITIAL_EVENTS = [{\n  id: createEventId(),\n  title: 'All-day event',\n  start: todayStr\n}, {\n  id: createEventId(),\n  title: 'Timed event',\n  start: todayStr + 'T12:00:00'\n}, {\n  id: createEventId(),\n  title: \"event 1\",\n  date: \"2022-09-01\"\n}, {\n  id: createEventId(),\n  title: \"BirthDay\",\n  date: \"2022-09-16\"\n}, {\n  id: createEventId(),\n  title: \"All-day event\",\n  date: \"2022-09-04\"\n}, {\n  id: createEventId(),\n  title: \"event\",\n  date: \"2022-09-20\"\n}, {\n  id: createEventId(),\n  title: \"event 2\",\n  date: \"2022-10-07\"\n}, {\n  id: createEventId(),\n  title: \"all-day event\",\n  date: \"2022-10-27\"\n}, {\n  id: createEventId(),\n  title: \"event\",\n  date: \"2022-12-10\"\n}, {\n  id: createEventId(),\n  title: \"event2\",\n  date: \"2022-12-12\"\n}, {\n  id: createEventId(),\n  title: \"event\",\n  date: \"2022-11-1\",\n  start: \"T12:00:00\"\n}, {\n  id: createEventId(),\n  title: \"event\",\n  date: \"2022-11-18\"\n}, {\n  id: createEventId(),\n  title: \"event\",\n  date: \"2022-11-06\"\n}, {\n  id: createEventId(),\n  title: \"All Day event\",\n  date: \"2022-12-06\"\n}, {\n  id: createEventId(),\n  title: \"BirthDay Party\",\n  date: \"2022-12-22\"\n}, {\n  id: createEventId(),\n  title: \"4p meeting\",\n  date: \"2022-12-11\"\n}, {\n  id: createEventId(),\n  title: \"3:30p meeting\",\n  date: \"2022-12-12\"\n}, {\n  id: createEventId(),\n  title: \"Tour with our team \",\n  date: \"2023-01-16\"\n}, {\n  id: createEventId(),\n  title: \"4p meeting \",\n  date: \"2023-01-03\"\n}, {\n  id: createEventId(),\n  title: \"event3\",\n  date: \"2023-01-06\"\n}, {\n  id: createEventId(),\n  title: \"4p meeting\",\n  date: \"2023-01-22\"\n}, {\n  id: createEventId(),\n  title: \"event1\",\n  date: \"2023-01-22\"\n}, {\n  id: createEventId(),\n  title: \"3:30p meeting\",\n  date: \"2023-01-23\"\n}, {\n  id: createEventId(),\n  title: \"3:30p meeting\",\n  date: \"2023-01-27\"\n}];\nexport function createEventId() {\n  return String(eventGuid++);\n}","map":{"version":3,"names":["eventGuid","todayStr","Date","toISOString","replace","INITIAL_EVENTS","id","createEventId","title","start","date","String"],"sources":["D:/Wrenix/Spring-Sfa/Cuba/template/template/src/store/modules/calendar.js"],"sourcesContent":["let eventGuid = 0\nlet todayStr = new Date().toISOString().replace(/T.*$/, '') \n\nexport const INITIAL_EVENTS= [\n  {\n    id: createEventId(),\n    title: 'All-day event',\n    start: todayStr\n  },\n  {\n    id: createEventId(),\n    title: 'Timed event',\n    start: todayStr + 'T12:00:00'\n  },\n  { \n    id: createEventId(),\n      title: \"event 1\",\n       date: \"2022-09-01\"\n  },\n{\n    id: createEventId(),\n     title: \"BirthDay\",\n      date: \"2022-09-16\"\n},\n{ \n  id: createEventId(),\n  title: \"All-day event\", \n  date: \"2022-09-04\" \n    },\n{\n    id: createEventId(),\n   title: \"event\", \n   date: \"2022-09-20\"\n   },\n{\n    id: createEventId(),\n  title:\"event 2\",\n   date:\"2022-10-07\"\n  },\n{\n    id: createEventId(),\n    title:\"all-day event\", \n    date:\"2022-10-27\"\n  },\n{\n    id: createEventId(),\n  title:\"event\",\n  date:\"2022-12-10\"\n        },\n{\n    id: createEventId(),\n    title:\"event2\",\n    date:\"2022-12-12\"\n  },\n{\n    id: createEventId(),\n    title:\"event\",\n    date:\"2022-11-1\",\n    start:\"T12:00:00\"},\n  {\n      id: createEventId(),\n      title:\"event\",\n      date:\"2022-11-18\",},\n   {\n       id: createEventId(),\n      title:\"event\",\n      date:\"2022-11-06\",\n    },\n    {\n        id: createEventId(),\n       title:\"All Day event\",\n       date:\"2022-12-06\",\n     },\n     {\n        id: createEventId(),\n       title:\"BirthDay Party\",\n       date:\"2022-12-22\",\n     },\n     {\n        id: createEventId(),\n       title:\"4p meeting\",\n       date:\"2022-12-11\",\n     },\n     {\n        id: createEventId(),\n       title:\"3:30p meeting\",\n       date:\"2022-12-12\",\n     },\n     {\n        id: createEventId(),\n       title:\"Tour with our team \",\n       date:\"2023-01-16\",\n     },\n     {\n        id: createEventId(),\n       title:\"4p meeting \",\n       date:\"2023-01-03\",\n     },\n     {\n      id: createEventId(),\n     title:\"event3\",\n     date:\"2023-01-06\",\n   },\n     {\n        id: createEventId(),\n       title:\"4p meeting\",\n       date:\"2023-01-22\",\n     },\n     {\n        id: createEventId(),\n       title:\"event1\",\n       date:\"2023-01-22\",\n     },\n     {\n        id: createEventId(),\n       title:\"3:30p meeting\",\n       date:\"2023-01-23\",\n     },\n     {\n        id: createEventId(),\n       title:\"3:30p meeting\",\n       date:\"2023-01-27\",\n     },\n]\n\nexport function createEventId() {\n  return String(eventGuid++)\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}