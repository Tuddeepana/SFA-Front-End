{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport apiService from '@/services/apiService';\nexport default {\n  name: 'login',\n  data() {\n    return {\n      user: {\n        email: {\n          value: '',\n          errormsg: ''\n        },\n        password: {\n          value: '',\n          errormsg: ''\n        }\n      }\n    };\n  },\n  methods: {\n    async login() {\n      // Validate email and password\n      if (!this.user.password.value || this.user.password.value.length < 6) {\n        this.user.password.errormsg = 'Password must be at least 6 characters.';\n      } else {\n        this.user.password.errormsg = '';\n      }\n      if (!this.user.email.value) {\n        this.user.email.errormsg = 'Email is required.';\n      } else if (!this.validEmail(this.user.email.value)) {\n        this.user.email.errormsg = 'Invalid email format.';\n      } else {\n        this.user.email.errormsg = '';\n      }\n\n      // Proceed if no validation errors\n      if (!this.user.email.errormsg && !this.user.password.errormsg) {\n        try {\n          const response = await apiService.login(this.user.email.value, this.user.password.value);\n\n          // Store the token and user details\n          localStorage.setItem('token', response.data.token);\n          localStorage.setItem('user', JSON.stringify(response.data));\n\n          // Redirect to the dashboard\n          this.$router.push('//dashboard');\n        } catch (error) {\n          alert('Invalid credentials or server error.');\n          console.error(error);\n        }\n      }\n    },\n    validEmail(email) {\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    }\n  }\n};","map":{"version":3,"names":["apiService","name","data","user","email","value","errormsg","password","methods","login","length","validEmail","response","localStorage","setItem","token","JSON","stringify","$router","push","error","alert","console","re","test"],"sources":["D:\\Wrenix\\Spring-Sfa\\Cuba\\template\\template\\src\\auth\\login.vue"],"sourcesContent":["<template>\n  <div>\n\n    <div class=\"container-fluid\">\n      <div class=\"row \">\n        <div class=\"col-12 p-0\">\n          <div class=\"login-card\">\n            <div>\n              <div>\n                <a class=\"logo\">\n                  <img class=\"img-fluid for-light\" src=\"../assets/images/logo/logo.png\" alt=\"looginpage\" />\n                  <img class=\"img-fluid for-dark\" src=\"../assets/images/logo/logo_dark.png\" alt=\"looginpage\" />\n                </a>\n              </div>\n              <div class=\"login-main\">\n                <form class=\"theme-form\">\n                  <h4>Sign in to account</h4>\n                  <p>Enter your email & password to login</p>\n                  <div class=\"form-group\">\n                    <label class=\"col-form-label\">Email Address</label>\n                    <input class=\"form-control\" type=\"email\" required=\"\" placeholder=\"muthutex@gmail.com\"\n                      v-model=\"user.email.value\">\n                    <span class=\"validate-error\" v-if=\"!user.email.value || !validEmail(user.email.value)\">{{\n                      user.email.errormsg }}</span>\n\n                  </div>\n                  <div class=\"form-group\">\n                    <label class=\"col-form-label\">Password</label>\n                    <div class=\"form-input position-relative\">\n                      <input class=\"form-control\" type=\"password\" name=\"login[password]\" required=\"\"\n                        placeholder=\"*********\" v-model=\"user.password.value\">\n                      <span class=\"validate-error\" v-if=\"user.password.value.length < 7\">{{ user.password.errormsg\n                      }}</span>\n\n                      <div class=\"show-hide\"><span class=\"show\"> </span></div>\n                    </div>\n                  </div>\n                  <div class=\"form-group mb-0\">\n                    <div class=\"checkbox p-0\">\n                      <input id=\"checkbox1\" type=\"checkbox\">\n                      <label class=\"text-muted\" for=\"checkbox1\">Remember password</label>\n                    </div><router-link class=\"link\" to=\"/authentication/forgetpassword\"> Forgot password?</router-link>\n                    <div class=\"text-end mt-3\">\n                      <button class=\"btn btn-primary btn-block w-100\" type=\"submit\" @click.prevent=\"login\">Sign\n                        in</button>\n\n                    </div>\n                  </div>\n                  <p class=\"mt-4 mb-0 text-center\">Don't have account?<a class=\"ms-2\" href=\"sign-up.html\">Create\n                      Account</a></p>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport apiService from '@/services/apiService';\n\nexport default {\n  name: 'login',\n  data() {\n    return {\n      user: {\n        email: {\n          value: '',\n          errormsg: '',\n        },\n        password: {\n          value: '',\n          errormsg: '',\n        },\n      },\n    };\n  },\n  methods: {\n    async login() {\n      // Validate email and password\n      if (!this.user.password.value || this.user.password.value.length < 6) {\n        this.user.password.errormsg = 'Password must be at least 6 characters.';\n      } else {\n        this.user.password.errormsg = '';\n      }\n\n      if (!this.user.email.value) {\n        this.user.email.errormsg = 'Email is required.';\n      } else if (!this.validEmail(this.user.email.value)) {\n        this.user.email.errormsg = 'Invalid email format.';\n      } else {\n        this.user.email.errormsg = '';\n      }\n\n      // Proceed if no validation errors\n      if (!this.user.email.errormsg && !this.user.password.errormsg) {\n        try {\n          const response = await apiService.login(\n            this.user.email.value,\n            this.user.password.value\n          );\n\n          // Store the token and user details\n          localStorage.setItem('token', response.data.token);\n          localStorage.setItem('user', JSON.stringify(response.data));\n\n          // Redirect to the dashboard\n          this.$router.push('//dashboard');\n        } catch (error) {\n          alert('Invalid credentials or server error.');\n          console.error(error);\n        }\n      }\n    },\n    validEmail(email) {\n      const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    },\n  },\n};\n</script>"],"mappings":";AA8DA,OAAOA,UAAS,MAAO,uBAAuB;AAE9C,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,KAAK,EAAE;UACLC,KAAK,EAAE,EAAE;UACTC,QAAQ,EAAE;QACZ,CAAC;QACDC,QAAQ,EAAE;UACRF,KAAK,EAAE,EAAE;UACTC,QAAQ,EAAE;QACZ;MACF;IACF,CAAC;EACH,CAAC;EACDE,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ;MACA,IAAI,CAAC,IAAI,CAACN,IAAI,CAACI,QAAQ,CAACF,KAAI,IAAK,IAAI,CAACF,IAAI,CAACI,QAAQ,CAACF,KAAK,CAACK,MAAK,GAAI,CAAC,EAAE;QACpE,IAAI,CAACP,IAAI,CAACI,QAAQ,CAACD,QAAO,GAAI,yCAAyC;MACzE,OAAO;QACL,IAAI,CAACH,IAAI,CAACI,QAAQ,CAACD,QAAO,GAAI,EAAE;MAClC;MAEA,IAAI,CAAC,IAAI,CAACH,IAAI,CAACC,KAAK,CAACC,KAAK,EAAE;QAC1B,IAAI,CAACF,IAAI,CAACC,KAAK,CAACE,QAAO,GAAI,oBAAoB;MACjD,OAAO,IAAI,CAAC,IAAI,CAACK,UAAU,CAAC,IAAI,CAACR,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC,EAAE;QAClD,IAAI,CAACF,IAAI,CAACC,KAAK,CAACE,QAAO,GAAI,uBAAuB;MACpD,OAAO;QACL,IAAI,CAACH,IAAI,CAACC,KAAK,CAACE,QAAO,GAAI,EAAE;MAC/B;;MAEA;MACA,IAAI,CAAC,IAAI,CAACH,IAAI,CAACC,KAAK,CAACE,QAAO,IAAK,CAAC,IAAI,CAACH,IAAI,CAACI,QAAQ,CAACD,QAAQ,EAAE;QAC7D,IAAI;UACF,MAAMM,QAAO,GAAI,MAAMZ,UAAU,CAACS,KAAK,CACrC,IAAI,CAACN,IAAI,CAACC,KAAK,CAACC,KAAK,EACrB,IAAI,CAACF,IAAI,CAACI,QAAQ,CAACF,KACrB,CAAC;;UAED;UACAQ,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAACV,IAAI,CAACa,KAAK,CAAC;UAClDF,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEE,IAAI,CAACC,SAAS,CAACL,QAAQ,CAACV,IAAI,CAAC,CAAC;;UAE3D;UACA,IAAI,CAACgB,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;QAClC,EAAE,OAAOC,KAAK,EAAE;UACdC,KAAK,CAAC,sCAAsC,CAAC;UAC7CC,OAAO,CAACF,KAAK,CAACA,KAAK,CAAC;QACtB;MACF;IACF,CAAC;IACDT,UAAUA,CAACP,KAAK,EAAE;MAChB,MAAMmB,EAAC,GACL,uJAAuJ;MACzJ,OAAOA,EAAE,CAACC,IAAI,CAACpB,KAAK,CAAC;IACvB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}