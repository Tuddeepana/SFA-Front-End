{"ast":null,"code":"import { mapState } from 'vuex';\nimport getImage from \"@/mixins/getImage\";\nexport default {\n  mixins: [getImage],\n  computed: {\n    ...mapState({\n      bootstraplist: state => state.bootsrap.bootstrap,\n      inverselist: state => state.bootsrap.inverse\n    })\n  }\n};","map":{"version":3,"names":["mapState","getImage","mixins","computed","bootstraplist","state","bootsrap","bootstrap","inverselist","inverse"],"sources":["D:\\Wrenix\\Spring-Sfa\\Cuba\\template\\template\\src\\pages\\tables\\bootstrapTable\\basicTables\\basicTable.vue"],"sourcesContent":["<template>\n  <div class=\"col-sm-12\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h3>Basic Table With Border Bottom Color</h3><span>Use a class<code>table</code> to any table, and\n          <code>.border-bottom-*</code>class for Border bottom color</span>\n      </div>\n      <div class=\"table-responsive\">\n        <table class=\"table\">\n          <thead>\n            <tr class=\"border-bottom-primary\">\n              <th scope=\"col\">Id</th>\n              <th scope=\"col\">First Name</th>\n              <th scope=\"col\">Last Name</th>\n              <th scope=\"col\">Username</th>\n              <th scope=\"col\">Designation</th>\n              <th scope=\"col\">Company</th>\n              <th scope=\"col\">Language</th>\n              <th scope=\"col\">Country</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr :class=\"item.borderColor\" v-for=\"(item, index) in bootstraplist\" :key=\"index\">\n              <th scope=\"row\">{{ item.id }}</th>\n              <td> <img class=\"img-30 me-2\" :src=\"getImageUrl(item.img)\" alt=\"profile\">{{ item.firstName }}</td>\n              <td>{{ item.lastName }}</td>\n              <td>{{ item.userName }}</td>\n              <td>{{ item.role }}</td>\n              <td>{{ item.company }}</td>\n              <td> <span class=\"badge \" :class=\"item.badgeClass\">{{ item.language }}</span></td>\n              <td>{{ item.country }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-sm-12\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h3>Inverse Table</h3><span>Use a class <code>table-inverse</code> inside table element.</span>\n      </div>\n      <div class=\"table-responsive\">\n        <table class=\"table table-inverse\">\n          <thead>\n            <tr class=\"border-bottom-light\">\n              <th scope=\"col\">Id</th>\n              <th scope=\"col\">First Name</th>\n              <th scope=\"col\">Last Name</th>\n              <th scope=\"col\">Office</th>\n              <th scope=\"col\">Position</th>\n              <th scope=\"col\">Salary</th>\n              <th scope=\"col\">Join Date </th>\n              <th scope=\"col\">Age</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(item, index) in inverselist\" :key=\"index\">\n              <th scope=\"row\">{{ item.id }}</th>\n              <td>{{ item.firstName }}</td>\n              <td>{{ item.lastName }}</td>\n              <td>{{ item.office }}</td>\n              <td>{{ item.role }}</td>\n              <td>{{ item.salary }}</td>\n              <td>{{ item.join }} </td>\n              <td>{{ item.age }} </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { mapState } from 'vuex';\nimport getImage from \"@/mixins/getImage\"\nexport default {\n  mixins: [getImage],\n  computed: {\n    ...mapState({\n      bootstraplist: state => state.bootsrap.bootstrap,\n      inverselist: state => state.bootsrap.inverse\n    })\n  },\n}\n</script>"],"mappings":"AA0EA,SAASA,QAAO,QAAS,MAAM;AAC/B,OAAOC,QAAO,MAAO,mBAAkB;AACvC,eAAe;EACbC,MAAM,EAAE,CAACD,QAAQ,CAAC;EAClBE,QAAQ,EAAE;IACR,GAAGH,QAAQ,CAAC;MACVI,aAAa,EAAEC,KAAI,IAAKA,KAAK,CAACC,QAAQ,CAACC,SAAS;MAChDC,WAAW,EAAEH,KAAI,IAAKA,KAAK,CAACC,QAAQ,CAACG;IACvC,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}