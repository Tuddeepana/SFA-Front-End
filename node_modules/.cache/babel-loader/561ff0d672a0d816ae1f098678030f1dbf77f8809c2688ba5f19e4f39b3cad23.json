{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"col-sm-12 col-xl-6 box-col-12\"\n};\nconst _hoisted_2 = {\n  class: \"card\"\n};\nconst _hoisted_3 = {\n  class: \"card-body chart-block\"\n};\nconst _hoisted_4 = {\n  class: \"word-tree\",\n  id: \"wordtree_basic\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_GChart = _resolveComponent(\"GChart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n    class: \"card-header\"\n  }, [_createElementVNode(\"h4\", null, \"Word Tree\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_GChart, {\n    type: $data.type,\n    data: $data.data,\n    options: $data.options,\n    settings: $data.settings\n  }, null, 8 /* PROPS */, [\"type\", \"data\", \"options\", \"settings\"])])])])]);\n}","map":{"version":3,"names":["class","id","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","_component_GChart","type","$data","data","options","settings"],"sources":["D:\\Wrenix\\Spring-Sfa\\Cuba\\template\\template\\src\\pages\\charts\\googleChart\\wordTree.vue"],"sourcesContent":["<template>\n<div class=\"col-sm-12 col-xl-6 box-col-12\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <h4>Word Tree</h4>\n        </div>\n        <div class=\"card-body  chart-block\">\n            <div class=\"word-tree\" id=\"wordtree_basic\">\n\n                <GChart :type=\"type\" :data=\"data\" :options=\"options\" :settings=\"settings\" />\n            </div>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\nimport {\n    GChart\n} from \"vue-google-charts\";\nexport const chartType = 'WordTree';\n\nexport const chartData = [\n    ['Phrases'],\n    ['cats are better than dogs'],\n    ['cats eat kibble'],\n    ['cats are better than hamsters'],\n    ['cats are awesome'],\n    ['cats are people too'],\n    ['cats eat mice'],\n    ['cats meowing'],\n    ['cats in the cradle'],\n    ['cats eat mice'],\n    ['cats in the cradle lyrics'],\n    ['cats eat kibble'],\n    ['cats for adoption'],\n    ['cats are family'],\n    ['cats eat mice'],\n    ['cats are better than kittens'],\n    ['cats are evil'],\n    ['cats are weird'],\n    ['cats eat mice'],\n];\n\nexport const chartOptions = {\n    wordtree: {\n        format: 'implicit',\n        word: 'cats',\n    },\n    width: 707,\n    height: 400,\n};\n\nexport default {\n    components: {\n        GChart,\n    },\n    data() {\n        return {\n            type: chartType,\n            data: chartData,\n            options: chartOptions,\n            settings: {\n                packages: ['wordtree'],\n            },\n        };\n    },\n};\n</script>\n"],"mappings":";;EACKA,KAAK,EAAC;AAA+B;;EACjCA,KAAK,EAAC;AAAM;;EAIRA,KAAK,EAAC;AAAwB;;EAC1BA,KAAK,EAAC,WAAW;EAACC,EAAE,EAAC;;;;uBANtCC,mBAAA,CAYM,OAZNC,UAYM,GAXFC,mBAAA,CAUM,OAVNC,UAUM,G,0BATFD,mBAAA,CAEM;IAFDJ,KAAK,EAAC;EAAa,IACpBI,mBAAA,CAAkB,YAAd,WAAS,E,sBAEjBA,mBAAA,CAKM,OALNE,UAKM,GAJFF,mBAAA,CAGM,OAHNG,UAGM,GADFC,YAAA,CAA4EC,iBAAA;IAAnEC,IAAI,EAAEC,KAAA,CAAAD,IAAI;IAAGE,IAAI,EAAED,KAAA,CAAAC,IAAI;IAAGC,OAAO,EAAEF,KAAA,CAAAE,OAAO;IAAGC,QAAQ,EAAEH,KAAA,CAAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}