{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n  name: 'login',\n  data() {\n    return {\n      user: {\n        email: {\n          value: '',\n          errormsg: ''\n        },\n        password: {\n          value: '',\n          errormsg: ''\n        }\n      }\n    };\n  },\n  computed: {\n    ...mapGetters('auth', ['getLoading', 'getError']),\n    loading() {\n      return this.getLoading;\n    },\n    error() {\n      return this.getError;\n    }\n  },\n  methods: {\n    ...mapActions('auth', {\n      loginAction: 'login'\n    }),\n    async login() {\n      // Validate form\n      if (!this.validateForm()) return;\n      try {\n        await this.loginAction({\n          email: this.user.email.value,\n          password: this.user.password.value\n        });\n\n        // Redirect to home page on success\n        this.$router.push('/');\n      } catch (error) {\n        // Error is already handled by the Vuex store\n        console.error('Login error', error);\n      }\n    },\n    validateForm() {\n      let isValid = true;\n\n      // Validate password\n      if (!this.user.password.value || this.user.password.value.length < 6) {\n        this.user.password.errormsg = 'min length 6';\n        isValid = false;\n      } else {\n        this.user.password.errormsg = '';\n      }\n\n      // Validate email\n      if (!this.user.email.value) {\n        this.user.email.errormsg = 'empty not allowed';\n        isValid = false;\n      } else if (!this.validEmail(this.user.email.value)) {\n        this.user.email.errormsg = 'Valid email required.';\n        isValid = false;\n      } else {\n        this.user.email.errormsg = '';\n      }\n      return isValid;\n    },\n    validEmail(email) {\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","name","data","user","email","value","errormsg","password","computed","loading","getLoading","error","getError","methods","loginAction","login","validateForm","$router","push","console","isValid","length","validEmail","re","test"],"sources":["D:\\Wrenix\\Spring-Sfa\\Cuba\\template\\template\\src\\auth\\login.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"container-fluid\">\n      <div class=\"row \">\n        <div class=\"col-12 p-0\">\n          <div class=\"login-card\">\n            <div>\n              <div>\n                <a class=\"logo\">\n                  <img class=\"img-fluid for-light\" src=\"../assets/images/logo/logo.png\" alt=\"looginpage\" />\n                  <img class=\"img-fluid for-dark\" src=\"../assets/images/logo/logo_dark.png\" alt=\"looginpage\" />\n                </a>\n              </div>\n              <div class=\"login-main\">\n                <form class=\"theme-form\">\n                  <h4>Sign in to account</h4>\n                  <p>Enter your email & password to login</p>\n\n                  <!-- API error message -->\n                  <div v-if=\"error\" class=\"alert alert-danger\">{{ error }}</div>\n\n                  <div class=\"form-group\">\n                    <label class=\"col-form-label\">Email Address</label>\n                    <input class=\"form-control\" type=\"email\" required=\"\" placeholder=\"muthutex@gmail.com\"\n                      v-model=\"user.email.value\">\n                    <span class=\"validate-error\" v-if=\"!user.email.value || !validEmail(user.email.value)\">{{\n                      user.email.errormsg }}</span>\n                  </div>\n\n                  <div class=\"form-group\">\n                    <label class=\"col-form-label\">Password</label>\n                    <div class=\"form-input position-relative\">\n                      <input class=\"form-control\" type=\"password\" name=\"login[password]\" required=\"\"\n                        placeholder=\"*********\" v-model=\"user.password.value\">\n                      <span class=\"validate-error\" v-if=\"user.password.value.length < 7\">{{ user.password.errormsg\n                      }}</span>\n                      <div class=\"show-hide\"><span class=\"show\"> </span></div>\n                    </div>\n                  </div>\n\n                  <div class=\"form-group mb-0\">\n                    <div class=\"checkbox p-0\">\n                      <input id=\"checkbox1\" type=\"checkbox\">\n                      <label class=\"text-muted\" for=\"checkbox1\">Remember password</label>\n                    </div>\n                    <router-link class=\"link\" to=\"/authentication/forgetpassword\"> Forgot password?</router-link>\n                    <div class=\"text-end mt-3\">\n                      <button class=\"btn btn-primary btn-block w-100\" type=\"submit\" @click.prevent=\"login\" :disabled=\"loading\">\n                        <span v-if=\"loading\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                        Sign in\n                      </button>\n                    </div>\n                  </div>\n\n                  <p class=\"mt-4 mb-0 text-center\">Don't have account?<a class=\"ms-2\" href=\"sign-up.html\">Create\n                      Account</a></p>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex';\n\nexport default {\n  name: 'login',\n  data() {\n    return {\n      user: {\n        email: {\n          value: '',\n          errormsg: ''\n        },\n        password: {\n          value: '',\n          errormsg: ''\n        }\n      }\n    };\n  },\n  computed: {\n    ...mapGetters('auth', ['getLoading', 'getError']),\n    loading() {\n      return this.getLoading;\n    },\n    error() {\n      return this.getError;\n    }\n  },\n  methods: {\n    ...mapActions('auth', {\n      loginAction: 'login'\n    }),\n    async login() {\n      // Validate form\n      if (!this.validateForm()) return;\n\n      try {\n        await this.loginAction({\n          email: this.user.email.value,\n          password: this.user.password.value\n        });\n\n        // Redirect to home page on success\n        this.$router.push('/');\n      } catch (error) {\n        // Error is already handled by the Vuex store\n        console.error('Login error', error);\n      }\n    },\n    validateForm() {\n      let isValid = true;\n\n      // Validate password\n      if (!this.user.password.value || this.user.password.value.length < 6) {\n        this.user.password.errormsg = 'min length 6';\n        isValid = false;\n      } else {\n        this.user.password.errormsg = '';\n      }\n\n      // Validate email\n      if (!this.user.email.value) {\n        this.user.email.errormsg = 'empty not allowed';\n        isValid = false;\n      } else if (!this.validEmail(this.user.email.value)) {\n        this.user.email.errormsg = 'Valid email required.';\n        isValid = false;\n      } else {\n        this.user.email.errormsg = '';\n      }\n\n      return isValid;\n    },\n    validEmail(email) {\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    }\n  }\n};\n</script>"],"mappings":";AAmEA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAE7C,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,KAAK,EAAE;UACLC,KAAK,EAAE,EAAE;UACTC,QAAQ,EAAE;QACZ,CAAC;QACDC,QAAQ,EAAE;UACRF,KAAK,EAAE,EAAE;UACTC,QAAQ,EAAE;QACZ;MACF;IACF,CAAC;EACH,CAAC;EACDE,QAAQ,EAAE;IACR,GAAGT,UAAU,CAAC,MAAM,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;IACjDU,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACC,UAAU;IACxB,CAAC;IACDC,KAAKA,CAAA,EAAG;MACN,OAAO,IAAI,CAACC,QAAQ;IACtB;EACF,CAAC;EACDC,OAAO,EAAE;IACP,GAAGb,UAAU,CAAC,MAAM,EAAE;MACpBc,WAAW,EAAE;IACf,CAAC,CAAC;IACF,MAAMC,KAAKA,CAAA,EAAG;MACZ;MACA,IAAI,CAAC,IAAI,CAACC,YAAY,CAAC,CAAC,EAAE;MAE1B,IAAI;QACF,MAAM,IAAI,CAACF,WAAW,CAAC;UACrBV,KAAK,EAAE,IAAI,CAACD,IAAI,CAACC,KAAK,CAACC,KAAK;UAC5BE,QAAQ,EAAE,IAAI,CAACJ,IAAI,CAACI,QAAQ,CAACF;QAC/B,CAAC,CAAC;;QAEF;QACA,IAAI,CAACY,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;MACxB,EAAE,OAAOP,KAAK,EAAE;QACd;QACAQ,OAAO,CAACR,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;MACrC;IACF,CAAC;IACDK,YAAYA,CAAA,EAAG;MACb,IAAII,OAAM,GAAI,IAAI;;MAElB;MACA,IAAI,CAAC,IAAI,CAACjB,IAAI,CAACI,QAAQ,CAACF,KAAI,IAAK,IAAI,CAACF,IAAI,CAACI,QAAQ,CAACF,KAAK,CAACgB,MAAK,GAAI,CAAC,EAAE;QACpE,IAAI,CAAClB,IAAI,CAACI,QAAQ,CAACD,QAAO,GAAI,cAAc;QAC5Cc,OAAM,GAAI,KAAK;MACjB,OAAO;QACL,IAAI,CAACjB,IAAI,CAACI,QAAQ,CAACD,QAAO,GAAI,EAAE;MAClC;;MAEA;MACA,IAAI,CAAC,IAAI,CAACH,IAAI,CAACC,KAAK,CAACC,KAAK,EAAE;QAC1B,IAAI,CAACF,IAAI,CAACC,KAAK,CAACE,QAAO,GAAI,mBAAmB;QAC9Cc,OAAM,GAAI,KAAK;MACjB,OAAO,IAAI,CAAC,IAAI,CAACE,UAAU,CAAC,IAAI,CAACnB,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC,EAAE;QAClD,IAAI,CAACF,IAAI,CAACC,KAAK,CAACE,QAAO,GAAI,uBAAuB;QAClDc,OAAM,GAAI,KAAK;MACjB,OAAO;QACL,IAAI,CAACjB,IAAI,CAACC,KAAK,CAACE,QAAO,GAAI,EAAE;MAC/B;MAEA,OAAOc,OAAO;IAChB,CAAC;IACDE,UAAUA,CAAClB,KAAK,EAAE;MAChB,MAAMmB,EAAC,GAAI,uJAAuJ;MAClK,OAAOA,EAAE,CAACC,IAAI,CAACpB,KAAK,CAAC;IACvB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}