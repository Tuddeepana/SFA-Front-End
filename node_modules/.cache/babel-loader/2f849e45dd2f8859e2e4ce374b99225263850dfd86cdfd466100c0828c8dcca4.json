{"ast":null,"code":"import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"translate_wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"current_lang\"\n};\nconst _hoisted_3 = {\n  class: \"lang\"\n};\nconst _hoisted_4 = {\n  class: \"lang-txt\"\n};\nconst _hoisted_5 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"translate_wrapper\", {\n      'active': $data.isActive\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"i\", {\n    class: _normalizeClass([\"flag-icon\", this.langIcon]),\n    onClick: _cache[0] || (_cache[0] = $event => $options.display())\n  }, null, 2 /* CLASS */), _createElementVNode(\"span\", _hoisted_4, _toDisplayString(_ctx.langLangauge), 1 /* TEXT */)])]), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"more_lang\", {\n      'active': $data.isActive\n    }])\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.localOptions, (lang, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"lang\",\n      key: index\n    }, [_createElementVNode(\"i\", {\n      class: _normalizeClass([\"flag-icon\", lang.icon])\n    }, null, 2 /* CLASS */), _createElementVNode(\"span\", {\n      class: \"lang-txt\",\n      onClick: _withModifiers($event => $options.changeLocale(lang, lang.name), [\"prevent\"])\n    }, [_createTextVNode(_toDisplayString(lang.name), 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(lang.short), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_5)]);\n  }), 128 /* KEYED_FRAGMENT */))], 2 /* CLASS */)], 2 /* CLASS */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_normalizeClass","$data","isActive","_hoisted_2","_hoisted_3","langIcon","onClick","_cache","$event","$options","display","_hoisted_4","_toDisplayString","_ctx","langLangauge","_Fragment","_renderList","localOptions","lang","index","key","icon","_withModifiers","changeLocale","name","_createTextVNode","short","_hoisted_5"],"sources":["D:\\Wrenix\\Spring-Sfa\\Cuba\\template\\template\\src\\components\\header\\language.vue"],"sourcesContent":["<template>\n    <div class=\"translate_wrapper\">\n        <div class=\"translate_wrapper \" :class=\"{ 'active': isActive }\">\n            <div class=\"current_lang\">\n                <div class=\"lang\"><i class=\"flag-icon\" :class=\"this.langIcon\" @click=\"display()\"></i><span\n                        class=\"lang-txt\">{{ langLangauge }}</span></div>\n            </div>\n\n            <div class=\"more_lang\" :class=\"{ 'active': isActive }\">\n                <div class=\"lang\" v-for=\"(lang, index) in localOptions\" :key=\"index\"><i class=\"flag-icon \"\n                        :class=\"lang.icon\"></i><span class=\"lang-txt\" @click.prevent=\"changeLocale(lang, lang.name)\">{{\n                            lang.name\n                        }}<span>\n                            {{ lang.short }}</span></span></div>\n            </div>\n\n        </div>\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport { localeOptions } from '../../constants/config';\n\nexport default {\n    name: 'languagePage',\n    data() {\n        return {\n            isActive: false,\n            localOptions: localeOptions,\n        };\n    },\n    methods: {\n        display() {\n            this.isActive = !this.isActive\n        },\n        changeLocale(value, language) {\n            this.$i18n.locale = language\n            this.$store.dispatch('setLang', value);\n\n        },\n    },\n    computed: {\n        ...mapGetters({\n            langIcon: 'langIcon',\n            langLangauge: 'langLangauge'\n        })\n    },\n    mounted() {\n        this.$store.dispatch('setLang', { name: localStorage.getItem('currentLanguage') || 'EN', icon: localStorage.getItem('currentLanguageIcon') || 'flag-icon-us' })\n    }\n}\n</script>\n\n"],"mappings":";;EACSA,KAAK,EAAC;AAAmB;;EAEjBA,KAAK,EAAC;AAAc;;EAChBA,KAAK,EAAC;AAAM;;EACTA,KAAK,EAAC;AAAU;mBALxC;;uBACIC,mBAAA,CAgBM,OAhBNC,UAgBM,GAfFC,mBAAA,CAcM;IAdDH,KAAK,EAFlBI,eAAA,EAEmB,mBAAoB;MAAA,UAAqBC,KAAA,CAAAC;IAAQ;MACxDH,mBAAA,CAGM,OAHNI,UAGM,GAFFJ,mBAAA,CACwD,OADxDK,UACwD,GADtCL,mBAAA,CAAmE;IAAhEH,KAAK,EAJ1CI,eAAA,EAI2C,WAAW,OAAcK,QAAQ;IAAGC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,OAAO;2BAAQX,mBAAA,CACnC,QADmCY,UACnC,EAAAC,gBAAA,CAAtBC,IAAA,CAAAC,YAAY,iB,KAG5Cf,mBAAA,CAMM;IANDH,KAAK,EARtBI,eAAA,EAQuB,WAAW;MAAA,UAAqBC,KAAA,CAAAC;IAAQ;yBAC/CL,mBAAA,CAIgDkB,SAAA,QAbhEC,WAAA,CAS0Df,KAAA,CAAAgB,YAAY,EATtE,CAS0CC,IAAI,EAAEC,KAAK;yBAArCtB,mBAAA,CAIgD;MAJ3CD,KAAK,EAAC,MAAM;MAAwCwB,GAAG,EAAED;QAAOpB,mBAAA,CACtC;MADyCH,KAAK,EAT7FI,eAAA,EAS8F,WAAY,EAC1EkB,IAAI,CAACG,IAAI;6BAAMtB,mBAAA,CAGW;MAHLH,KAAK,EAAC,UAAU;MAAEU,OAAK,EAV5EgB,cAAA,CAAAd,MAAA,IAUsFC,QAAA,CAAAc,YAAY,CAACL,IAAI,EAAEA,IAAI,CAACM,IAAI;QAVlHC,gBAAA,CAAAb,gBAAA,CAW4BM,IAAI,CAACM,IAAI,kBACXzB,mBAAA,CACyB,cAAAa,gBAAA,CAApBM,IAAI,CAACQ,KAAK,iB,iBAbzCC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}