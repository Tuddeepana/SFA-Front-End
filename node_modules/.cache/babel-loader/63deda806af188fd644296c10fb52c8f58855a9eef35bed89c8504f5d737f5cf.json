{"ast":null,"code":"import { toast } from 'vue3-toastify';\nimport directionIcons from \"./themify_icon/directionIcons.vue\";\nimport WebAppIcons from \"./themify_icon/WebAppIcons.vue\";\nimport controlIcons from \"./themify_icon/controlIcons.vue\";\nimport textEditor from \"./themify_icon/textEditor.vue\";\nimport brandIcons from \"./themify_icon/brandIcons.vue\";\nexport default {\n  components: {\n    directionIcons,\n    WebAppIcons,\n    controlIcons,\n    textEditor,\n    brandIcons\n  },\n  data() {\n    return {\n      customAnimation: {\n        enter: \"animated bounce\",\n        exit: \"animated bounce\"\n      },\n      icon_bar_status: false,\n      select_icon: {\n        class: '',\n        tag: ''\n      }\n    };\n  },\n  methods: {\n    icon_bar(icon) {\n      this.select_icon.class = icon;\n      this.select_icon.tag = '<i class=\"' + icon + '\"></i>';\n      this.icon_bar_status = true;\n    },\n    close_icon_bar() {\n      this.icon_bar_status = false;\n    },\n    copy_icon() {\n      this.$refs.text.select();\n      document.execCommand('copy');\n      toast.success(\"Code Copied to clipboard!\", {\n        theme: 'colored',\n        icon: false,\n        hideProgressBar: true,\n        transition: this.customAnimation,\n        autoClose: 1000,\n        position: toast.POSITION.BOTTOM_RIGHT\n      });\n    }\n  }\n};","map":{"version":3,"names":["toast","directionIcons","WebAppIcons","controlIcons","textEditor","brandIcons","components","data","customAnimation","enter","exit","icon_bar_status","select_icon","class","tag","methods","icon_bar","icon","close_icon_bar","copy_icon","$refs","text","select","document","execCommand","success","theme","hideProgressBar","transition","autoClose","position","POSITION","BOTTOM_RIGHT"],"sources":["D:\\Wrenix\\Spring-Sfa\\Cuba\\template\\template\\src\\pages\\icons\\themify_icon.vue"],"sourcesContent":["<template>\n  <div>\n    <Breadcrumbs main=\"Icons\" title=\"Themify Icon\" />\n\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <directionIcons @selected=\"icon_bar\" />\n        <WebAppIcons @selected=\"icon_bar\" />\n        <controlIcons @selected=\"icon_bar\" />\n        <textEditor @selected=\"icon_bar\" />\n        <brandIcons @selected=\"icon_bar\" />\n      </div>\n    </div>\n\n    <div class=\"icon-hover-bottom p-fixed fa-fa-icon-show-div\" :class=\"{ 'opecity-0': !icon_bar_status }\"\n      :style=\"[icon_bar_status ? { 'display': 'block' } : { 'display': 'none' }]\">\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <div class=\"icon-popup\">\n            <div class=\"close-icon\" v-on:click=\"close_icon_bar\"><i class=\"icofont icofont-close\"></i></div>\n            <div class=\"icon-first\"><i class=\"fa-2x\" :class=\"[select_icon.class]\"></i></div>\n            <div class=\"icon-class\">\n              <label class=\"icon-title\">Class</label><span v-text=\"select_icon.class\"></span>\n            </div>\n            <div class=\"icon-last icon-last\">\n              <label class=\"icon-title\">Markup</label>\n              <div class=\"form-inline\">\n                <div class=\"form-group\">\n                  <input class=\"inp-val form-control m-r-10\" type=\"text\" ref=\"text\" :value=\"select_icon.tag\"\n                    readonly=\"readonly\">\n                  <button class=\"btn btn-primary notification\" v-on:click=\"copy_icon\">Copy text</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { toast } from 'vue3-toastify';\nimport directionIcons from \"./themify_icon/directionIcons.vue\"\nimport WebAppIcons from \"./themify_icon/WebAppIcons.vue\"\nimport controlIcons from \"./themify_icon/controlIcons.vue\"\nimport textEditor from \"./themify_icon/textEditor.vue\"\nimport brandIcons from \"./themify_icon/brandIcons.vue\"\nexport default {\n  components: {\n    directionIcons, WebAppIcons, controlIcons, textEditor, brandIcons\n  },\n  data() {\n    return {\n      customAnimation: {\n        enter: \"animated bounce\",\n        exit: \"animated bounce\",\n      },\n      icon_bar_status: false,\n      select_icon: {\n        class: '',\n        tag: ''\n      },\n\n    };\n  },\n  methods: {\n    icon_bar(icon) {\n\n      this.select_icon.class = icon;\n      this.select_icon.tag = '<i class=\"' + icon + '\"></i>';\n\n      this.icon_bar_status = true;\n    },\n    close_icon_bar() {\n      this.icon_bar_status = false;\n    },\n    copy_icon() {\n      this.$refs.text.select();\n      document.execCommand('copy');\n      toast.success(\"Code Copied to clipboard!\", {\n        theme: 'colored',\n        icon: false,\n        hideProgressBar: true,\n        transition: this.customAnimation,\n        autoClose: 1000,\n        position: toast.POSITION.BOTTOM_RIGHT,\n      });\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"@/assets/scss/vendors/animate.scss\"\n</style>"],"mappings":"AAyCA,SAASA,KAAI,QAAS,eAAe;AACrC,OAAOC,cAAa,MAAO,mCAAkC;AAC7D,OAAOC,WAAU,MAAO,gCAA+B;AACvD,OAAOC,YAAW,MAAO,iCAAgC;AACzD,OAAOC,UAAS,MAAO,+BAA8B;AACrD,OAAOC,UAAS,MAAO,+BAA8B;AACrD,eAAe;EACbC,UAAU,EAAE;IACVL,cAAc;IAAEC,WAAW;IAAEC,YAAY;IAAEC,UAAU;IAAEC;EACzD,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE;QACfC,KAAK,EAAE,iBAAiB;QACxBC,IAAI,EAAE;MACR,CAAC;MACDC,eAAe,EAAE,KAAK;MACtBC,WAAW,EAAE;QACXC,KAAK,EAAE,EAAE;QACTC,GAAG,EAAE;MACP;IAEF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQA,CAACC,IAAI,EAAE;MAEb,IAAI,CAACL,WAAW,CAACC,KAAI,GAAII,IAAI;MAC7B,IAAI,CAACL,WAAW,CAACE,GAAE,GAAI,YAAW,GAAIG,IAAG,GAAI,QAAQ;MAErD,IAAI,CAACN,eAAc,GAAI,IAAI;IAC7B,CAAC;IACDO,cAAcA,CAAA,EAAG;MACf,IAAI,CAACP,eAAc,GAAI,KAAK;IAC9B,CAAC;IACDQ,SAASA,CAAA,EAAG;MACV,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC;MACxBC,QAAQ,CAACC,WAAW,CAAC,MAAM,CAAC;MAC5BxB,KAAK,CAACyB,OAAO,CAAC,2BAA2B,EAAE;QACzCC,KAAK,EAAE,SAAS;QAChBT,IAAI,EAAE,KAAK;QACXU,eAAe,EAAE,IAAI;QACrBC,UAAU,EAAE,IAAI,CAACpB,eAAe;QAChCqB,SAAS,EAAE,IAAI;QACfC,QAAQ,EAAE9B,KAAK,CAAC+B,QAAQ,CAACC;MAC3B,CAAC,CAAC;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}