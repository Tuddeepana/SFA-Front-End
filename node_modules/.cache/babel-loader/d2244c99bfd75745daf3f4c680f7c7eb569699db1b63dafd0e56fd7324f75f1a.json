{"ast":null,"code":"import { mapState } from 'vuex';\nexport default {\n  computed: {\n    ...mapState({\n      sizing: state => state.bootsrap.sizingTablesXl,\n      Responsive: state => state.bootsrap.Responsive\n    })\n  }\n};","map":{"version":3,"names":["mapState","computed","sizing","state","bootsrap","sizingTablesXl","Responsive"],"sources":["D:\\Wrenix\\Spring-Sfa\\Cuba\\template\\template\\src\\pages\\tables\\bootstrapTable\\basicTables\\tableHead.vue"],"sourcesContent":["<template>\n  <div class=\"col-sm-12\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h3>Responsive Tables With Light Background</h3><span>A <code>.table-responsive , .table-light</code> inside table\n          element.</span>\n      </div>\n      <div class=\"card-block row\">\n        <div class=\"col-sm-12 col-lg-12 col-xl-12\">\n          <div class=\"table-responsive\">\n            <table class=\"table table-light\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Id</th>\n                  <th scope=\"col\">Task</th>\n                  <th scope=\"col\">Email</th>\n                  <th scope=\"col\">Phone</th>\n                  <th scope=\"col\">Assign</th>\n                  <th scope=\"col\">Date</th>\n                  <th scope=\"col\">Price </th>\n                  <th scope=\"col\">Status</th>\n                  <th scope=\"col\">Progress</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"(item, index) in Responsive\" :key=\"index\">\n                  <th scope=\"row\">{{ item.id }}</th>\n                  <td>{{ item.task }} </td>\n                  <td>{{ item.email }}</td>\n                  <td>{{ item.phone }}</td>\n                  <td>{{ item.assing }} </td>\n                  <td>{{ item.date }}</td>\n                  <td>{{ item.price }} </td>\n                  <td :class=\"item.class\">{{ item.status }}</td>\n                  <td>{{ item.progress }}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-sm-12\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h3>Sizing Tables</h3><span>Example of Extra large table, Add<code>.table-xl</code> class to\n          the<code>.table</code> , Large table Add <code> .table-lg</code> , Default table Add <code>.table-de</code> ,\n          Small table Add <code>.table-sm </code>, Extra Small table Add <code>.table-xs</code>to create a table.</span>\n      </div>\n      <div class=\"card-block row\">\n        <div class=\"col-sm-12 col-lg-12 col-xl-12\">\n          <div class=\"table-responsive\">\n            <table class=\"table table-lg\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Id</th>\n                  <th scope=\"col\">Employee Name</th>\n                  <th scope=\"col\">Date</th>\n                  <th scope=\"col\">Status</th>\n                  <th scope=\"col\">Hours</th>\n                  <th scope=\"col\">Performance</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"(item, index) in sizing\" :key=\"index\">\n                  <th scope=\"row\">{{ item.id }}</th>\n                  <td>{{ item.Name }}</td>\n                  <td>{{ item.Date }}</td>\n                  <td :class=\"item.statusClass\">{{ item.Status }}</td>\n                  <td>{{ item.hours }}</td>\n                  <td>{{ item.performance }}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { mapState } from 'vuex';\nexport default {\n  computed: {\n    ...mapState({\n      sizing: state => state.bootsrap.sizingTablesXl,\n      Responsive: state => state.bootsrap.Responsive,\n    })\n  },\n}\n</script>"],"mappings":"AAkFA,SAASA,QAAO,QAAS,MAAM;AAC/B,eAAe;EACbC,QAAQ,EAAE;IACR,GAAGD,QAAQ,CAAC;MACVE,MAAM,EAAEC,KAAI,IAAKA,KAAK,CAACC,QAAQ,CAACC,cAAc;MAC9CC,UAAU,EAAEH,KAAI,IAAKA,KAAK,CAACC,QAAQ,CAACE;IACtC,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}