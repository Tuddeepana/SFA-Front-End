{"ast":null,"code":"import { mapState } from 'vuex';\nexport default {\n  data() {\n    return {\n      markallread: true,\n      task: '',\n      addtask: false\n    };\n  },\n  computed: {\n    ...mapState({\n      todolist: state => state.todo.todo\n    })\n  },\n  methods: {\n    addnewtask() {\n      if (this.task !== '') {\n        this.$store.commit('todo/addtodo', this.task);\n        this.task = '';\n        this.addtask = false;\n        this.$toast.show('Task list is updated.', {\n          theme: 'outline',\n          position: 'top-right',\n          type: 'success',\n          duration: 2000\n        });\n      }\n    },\n    alltaskcomplete() {\n      this.$store.commit('todo/alltaskcomplete', this.markallread);\n      this.markallread = !this.markallread;\n      if (this.markallread) this.$toast.show('All tasks marked as Incomplete.', {\n        theme: 'outline',\n        position: 'top-right',\n        type: 'error',\n        duration: 2000\n      });else this.$toast.show('All tasks marked as complete.', {\n        theme: 'outline',\n        position: 'top-right',\n        type: 'success',\n        duration: 2000\n      });\n    },\n    tododelete(id) {\n      this.$store.commit('todo/tododelete', id);\n      this.$toast.show('Task has been deleted.', {\n        theme: 'outline',\n        position: 'top-right',\n        type: 'success',\n        duration: 2000\n      });\n    },\n    taskcomplete(id, status) {\n      this.$store.commit('todo/taskcomplete', id);\n      if (status !== 'complete') this.$toast.show(' tasks marked as complete.', {\n        theme: 'outline',\n        position: 'top-right',\n        type: 'success',\n        duration: 2000\n      });else this.$toast.show(' tasks marked as incomplete.', {\n        theme: 'outline',\n        position: 'top-right',\n        type: 'error',\n        duration: 2000\n      });\n    }\n  }\n};","map":{"version":3,"names":["mapState","data","markallread","task","addtask","computed","todolist","state","todo","methods","addnewtask","$store","commit","$toast","show","theme","position","type","duration","alltaskcomplete","tododelete","id","taskcomplete","status"],"sources":["D:\\Wrenix\\Spring-Sfa\\Cuba\\template\\template\\src\\pages\\todo\\addtask.vue"],"sourcesContent":["<template>\n    <div class=\"card\">\n        <div class=\"card-header b-bottom\">\n            <div class=\"todo-list-header\">\n                <div class=\"new-task-wrapper input-group\">\n                    <input class=\"form-control\" id=\"new-task\" placeholder=\"Enter new task here. . .\"\n                        v-on:keyup.enter=\"addnewtask\" v-model=\"task\"><span\n                        class=\"btn btn-primary d-flex input-group-text add-new-task-btn\" id=\"add-task\"\n                        @click=\"addnewtask()\">Add Task</span>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-body\">\n            <div class=\"todo\">\n                <div class=\"todo-list-wrapper\">\n                    <div class=\"todo-list-container\">\n                        <div class=\"todo-list-body custom-scrollbar\">\n                            <ul id=\"todo-list\">\n                                <li v-for=\"(todo, index) in todolist\" :key=\"index\" class=\"task\"\n                                    :class=\"{ 'completed': todo.status == 'complete' }\">\n                                    <div class=\"task-container\">\n                                        <h4 class=\"task-label\"> {{ todo.title }} </h4>\n                                        <div class=\"d-flex align-items-center gap-3\">\n                                            <div><span class=\"badge \" :class=\"todo.badgeClass\">{{ todo.priority }}</span>\n                                            </div>\n                                            <h5 class=\"assign-name m-0\">{{ todo.date }}</h5>\n                                            <span class=\"task-action-btn\">\n                                                <span @click=\"tododelete(todo.id)\" class=\"action-box large delete-btn\"\n                                                    title=\"Delete Task\"><i class=\"icon\"><i\n                                                            class=\"icon-trash\"></i></i></span>\n                                                <span @click=\"taskcomplete(todo.id, todo.status)\"\n                                                    class=\"action-box large complete-btn\" title=\"Mark Complete\"><i\n                                                        class=\"icon\"><i class=\"icon-check\"></i></i></span>\n                                            </span>\n                                        </div>\n                                    </div>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport { mapState } from 'vuex';\nexport default {\n    data() {\n        return {\n            markallread: true, task: '', addtask: false,\n        }\n    },\n    computed: {\n        ...mapState({\n            todolist: state => state.todo.todo,\n        })\n    },\n    methods: {\n        addnewtask() {\n            if (this.task !== '') {\n                this.$store.commit('todo/addtodo', this.task); this.task = '';\n                this.addtask = false;\n                this.$toast.show('Task list is updated.', {\n                    theme: 'outline', position: 'top-right', type: 'success', duration: 2000\n                });\n            }\n        },\n        alltaskcomplete() {\n            this.$store.commit('todo/alltaskcomplete', this.markallread);\n            this.markallread = !this.markallread;\n            if (this.markallread)\n                this.$toast.show('All tasks marked as Incomplete.', {\n                    theme: 'outline', position: 'top-right', type: 'error', duration: 2000\n                });\n            else\n                this.$toast.show('All tasks marked as complete.', {\n                    theme: 'outline', position: 'top-right', type: 'success', duration: 2000\n                });\n        },\n        tododelete(id) {\n            this.$store.commit('todo/tododelete', id);\n            this.$toast.show('Task has been deleted.', {\n                theme: 'outline', position: 'top-right', type: 'success', duration: 2000\n            });\n        },\n        taskcomplete(id, status) {\n            this.$store.commit('todo/taskcomplete', id);\n            if (status !== 'complete')\n                this.$toast.show(' tasks marked as complete.', {\n                    theme: 'outline', position: 'top-right', type: 'success', duration: 2000\n                });\n            else\n                this.$toast.show(' tasks marked as incomplete.', {\n                    theme: 'outline', position: 'top-right', type: 'error', duration: 2000\n                });\n        },\n    },\n}\n</script>"],"mappings":"AA8CA,SAASA,QAAO,QAAS,MAAM;AAC/B,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,WAAW,EAAE,IAAI;MAAEC,IAAI,EAAE,EAAE;MAAEC,OAAO,EAAE;IAC1C;EACJ,CAAC;EACDC,QAAQ,EAAE;IACN,GAAGL,QAAQ,CAAC;MACRM,QAAQ,EAAEC,KAAI,IAAKA,KAAK,CAACC,IAAI,CAACA;IAClC,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,UAAUA,CAAA,EAAG;MACT,IAAI,IAAI,CAACP,IAAG,KAAM,EAAE,EAAE;QAClB,IAAI,CAACQ,MAAM,CAACC,MAAM,CAAC,cAAc,EAAE,IAAI,CAACT,IAAI,CAAC;QAAE,IAAI,CAACA,IAAG,GAAI,EAAE;QAC7D,IAAI,CAACC,OAAM,GAAI,KAAK;QACpB,IAAI,CAACS,MAAM,CAACC,IAAI,CAAC,uBAAuB,EAAE;UACtCC,KAAK,EAAE,SAAS;UAAEC,QAAQ,EAAE,WAAW;UAAEC,IAAI,EAAE,SAAS;UAAEC,QAAQ,EAAE;QACxE,CAAC,CAAC;MACN;IACJ,CAAC;IACDC,eAAeA,CAAA,EAAG;MACd,IAAI,CAACR,MAAM,CAACC,MAAM,CAAC,sBAAsB,EAAE,IAAI,CAACV,WAAW,CAAC;MAC5D,IAAI,CAACA,WAAU,GAAI,CAAC,IAAI,CAACA,WAAW;MACpC,IAAI,IAAI,CAACA,WAAW,EAChB,IAAI,CAACW,MAAM,CAACC,IAAI,CAAC,iCAAiC,EAAE;QAChDC,KAAK,EAAE,SAAS;QAAEC,QAAQ,EAAE,WAAW;QAAEC,IAAI,EAAE,OAAO;QAAEC,QAAQ,EAAE;MACtE,CAAC,CAAC,MAEF,IAAI,CAACL,MAAM,CAACC,IAAI,CAAC,+BAA+B,EAAE;QAC9CC,KAAK,EAAE,SAAS;QAAEC,QAAQ,EAAE,WAAW;QAAEC,IAAI,EAAE,SAAS;QAAEC,QAAQ,EAAE;MACxE,CAAC,CAAC;IACV,CAAC;IACDE,UAAUA,CAACC,EAAE,EAAE;MACX,IAAI,CAACV,MAAM,CAACC,MAAM,CAAC,iBAAiB,EAAES,EAAE,CAAC;MACzC,IAAI,CAACR,MAAM,CAACC,IAAI,CAAC,wBAAwB,EAAE;QACvCC,KAAK,EAAE,SAAS;QAAEC,QAAQ,EAAE,WAAW;QAAEC,IAAI,EAAE,SAAS;QAAEC,QAAQ,EAAE;MACxE,CAAC,CAAC;IACN,CAAC;IACDI,YAAYA,CAACD,EAAE,EAAEE,MAAM,EAAE;MACrB,IAAI,CAACZ,MAAM,CAACC,MAAM,CAAC,mBAAmB,EAAES,EAAE,CAAC;MAC3C,IAAIE,MAAK,KAAM,UAAU,EACrB,IAAI,CAACV,MAAM,CAACC,IAAI,CAAC,4BAA4B,EAAE;QAC3CC,KAAK,EAAE,SAAS;QAAEC,QAAQ,EAAE,WAAW;QAAEC,IAAI,EAAE,SAAS;QAAEC,QAAQ,EAAE;MACxE,CAAC,CAAC,MAEF,IAAI,CAACL,MAAM,CAACC,IAAI,CAAC,8BAA8B,EAAE;QAC7CC,KAAK,EAAE,SAAS;QAAEC,QAAQ,EAAE,WAAW;QAAEC,IAAI,EAAE,OAAO;QAAEC,QAAQ,EAAE;MACtE,CAAC,CAAC;IACV;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}