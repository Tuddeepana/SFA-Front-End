{"ast":null,"code":"import { mapState } from 'vuex';\nexport default {\n  name: 'addChat',\n  props: {\n    chatElement: String\n  },\n  data() {\n    return {\n      text: \"\",\n      currentchat: [],\n      chatmenutoogle: false\n    };\n  },\n  computed: {\n    ...mapState({\n      currentChat() {\n        return this.currentchat = this.$store.getters['chat/currentChat'];\n      }\n    })\n  },\n  methods: {\n    getImgUrl(path) {\n      return require('../../../assets/images/' + path);\n    },\n    addChat: function () {\n      this.$emit(\"message\");\n      if (this.text !== '') {\n        this.$store.dispatch('chat/addChat', this.text);\n        this.text = '';\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapState","name","props","chatElement","String","data","text","currentchat","chatmenutoogle","computed","currentChat","$store","getters","methods","getImgUrl","path","require","addChat","$emit","dispatch"],"sources":["D:\\Wrenix\\Spring-Sfa\\Cuba\\template\\template\\src\\pages\\chat\\chatApp\\addChat.vue"],"sourcesContent":["<template>\n    <div class=\"chat-message clearfix\">\n \n                      <div class=\"row\">\n                        <div class=\"col-xl-12 d-flex\">\n                          <div class=\"smiley-box bg-primary\" >\n                            <div class=\"picker\">\n                              <img\n                                src=\"../../../assets/images/smiley.png\"\n                                alt=\"\"\n                              />\n                            </div>\n                          </div>\n                          <div class=\"input-group text-box\" ref=\"abc\">\n                            <input\n                              class=\"form-control input-txt-bx\"\n                              id=\"message-to-send\"\n                              v-model=\"text\"\n                              v-on:keyup.enter=\"addChat()\"\n                              type=\"text\"\n                              name=\"message-to-send\"\n                              placeholder=\"Type a message......\"\n                            />\n                              <button\n                                @click=\"addChat()\"\n                                class=\"btn btn-primary input-group-text\"\n                                type=\"button\"\n                              >\n                                SEND\n                              </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n</template>\n<script>\nimport { mapState } from 'vuex';\nexport default {\n    name:'addChat',\n    props:{\n      chatElement:String\n    },\n    data(){\n        return{\n            text:\"\",\n         currentchat: [],\n        chatmenutoogle: false,\n       \n        }\n    },\n    computed: {\n      ...mapState({\n        currentChat() {\n          return (this.currentchat = this.$store.getters['chat/currentChat']);\n        },\n      }),\n    },\n   \n    methods: {\n      getImgUrl(path) {\n        return require('../../../assets/images/' + path);\n      },\n            addChat: function () {\n              this.$emit(\"message\")\n        if (this.text !== '') {\n          this.$store.dispatch('chat/addChat', this.text);\n          this.text = '';\n        \n        }\n            },\n      }\n}\n</script>"],"mappings":"AAoCA,SAASA,QAAO,QAAS,MAAM;AAC/B,eAAe;EACXC,IAAI,EAAC,SAAS;EACdC,KAAK,EAAC;IACJC,WAAW,EAACC;EACd,CAAC;EACDC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,IAAI,EAAC,EAAE;MACVC,WAAW,EAAE,EAAE;MAChBC,cAAc,EAAE;IAEhB;EACJ,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGT,QAAQ,CAAC;MACVU,WAAWA,CAAA,EAAG;QACZ,OAAQ,IAAI,CAACH,WAAU,GAAI,IAAI,CAACI,MAAM,CAACC,OAAO,CAAC,kBAAkB,CAAC;MACpE;IACF,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACPC,SAASA,CAACC,IAAI,EAAE;MACd,OAAOC,OAAO,CAAC,yBAAwB,GAAID,IAAI,CAAC;IAClD,CAAC;IACKE,OAAO,EAAE,SAAAA,CAAA,EAAY;MACnB,IAAI,CAACC,KAAK,CAAC,SAAS;MAC1B,IAAI,IAAI,CAACZ,IAAG,KAAM,EAAE,EAAE;QACpB,IAAI,CAACK,MAAM,CAACQ,QAAQ,CAAC,cAAc,EAAE,IAAI,CAACb,IAAI,CAAC;QAC/C,IAAI,CAACA,IAAG,GAAI,EAAE;MAEhB;IACI;EACN;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}