{"ast":null,"code":"import getImage from \"@/mixins/getImage\";\nimport { mapState } from 'vuex';\nimport chatBodyLi from './chatBodyLi.vue';\nimport addChat from \"./addChat.vue\";\nimport chatMenu from \"./chatMenu.vue\";\nexport default {\n  mixins: [getImage],\n  components: {\n    addChat,\n    chatBodyLi,\n    chatMenu\n  },\n  data() {\n    return {\n      currentchat: [],\n      chatmenutoogle: false\n    };\n  },\n  computed: {\n    ...mapState({\n      currentChat() {\n        return this.currentchat = this.$store.getters['chat/currentChat'];\n      }\n    })\n  },\n  methods: {\n    addChat() {\n      var container = this.$el.querySelector(\".chat-history\");\n      setTimeout(function () {\n        container.scrollBy({\n          top: 200,\n          behavior: 'smooth'\n        });\n      }, 310);\n      setTimeout(function () {\n        container.scrollBy({\n          top: 200,\n          behavior: 'smooth'\n        });\n      }, 1100);\n    }\n  }\n};","map":{"version":3,"names":["getImage","mapState","chatBodyLi","addChat","chatMenu","mixins","components","data","currentchat","chatmenutoogle","computed","currentChat","$store","getters","methods","container","$el","querySelector","setTimeout","scrollBy","top","behavior"],"sources":["D:\\Wrenix\\Spring-Sfa\\Cuba\\template\\template\\src\\pages\\chat\\chatApp\\chatBody.vue"],"sourcesContent":["<template>\n    <div class=\"col call-chat-body\">\n        <div class=\"card\">\n            <div class=\"card-body p-0\">\n                <div class=\"row chat-box\">\n                    <div class=\"col pe-0 chat-right-aside\">\n                        <div class=\"chat\">\n                            <div class=\"chat-header clearfix\">\n                                <img class=\"rounded-circle\" v-if=\"currentchat.thumb\" :src=\"getImageUrl(currentchat.thumb)\"\n                                    alt=\"\" />\n                                <div class=\"about\">\n                                    <div class=\"name\">\n                                        {{ currentchat.name }}<span class=\"font-primary f-12 ms-1\">Typing...</span>\n                                    </div>\n                                    <div class=\"status \">\n                                        {{ currentchat.lastSeenDate }}\n                                    </div>\n                                </div>\n                                <ul class=\"list-inline float-start float-sm-end chat-menu-icons\">\n                                    <chatBodyLi />\n                                    <li class=\"list-inline-item toogle-bar\"\n                                        @click.prevent=\"chatmenutoogle = !chatmenutoogle\">\n                                        <a href=\"#\"><i class=\"icon-menu\"></i></a>\n                                    </li>\n                                </ul>\n                            </div>\n                            <div class=\"chat-history chat-msg-box custom-scrollbar\" ref=\"chatInput\">\n                                <ul>\n                                    <li v-for=\"(chat, index) in currentChat.chat.messages\" :key=\"index\"\n                                        v-bind:class=\"{ clearfix: chat.sender == 0 }\">\n                                        <div class=\"message\" v-bind:class=\"{\n                                            'other-message pull-right': chat.sender == 0,\n                                            'my-message': chat.sender != 0\n                                        }\">\n                                            <img class=\"rounded-circle float-start chat-user-img img-30 text-end\" alt=\"\"\n                                                v-if=\"currentchat.thumb && chat.sender != 0\"\n                                                v-bind:src=\"getImageUrl(currentchat.thumb)\" />\n                                            <img class=\"rounded-circle float-end chat-user-img img-30\" alt=\"\"\n                                                v-if=\"chat.sender == 0\" v-bind:src=\"getImageUrl('user/1.jpg')\" />\n                                            <div class=\"message-data text-end\"\n                                                v-bind:class=\"{ 'text-start': chat.sender == 0 }\">\n                                                <span class=\"message-data-time\">{{ chat.time }}</span>\n                                            </div>\n\n                                            {{ chat.text }}\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                            <addChat @message=\"addChat\" :chatElement='chatElement' />\n                        </div>\n                    </div>\n                    <div class=\"col ps-0 chat-menu\" :class=\"{ show: chatmenutoogle }\">\n                        <chatMenu />\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport getImage from \"@/mixins/getImage\"\nimport { mapState } from 'vuex';\nimport chatBodyLi from './chatBodyLi.vue';\nimport addChat from \"./addChat.vue\"\nimport chatMenu from \"./chatMenu.vue\"\nexport default {\n    mixins: [getImage],\n    components: {\n        addChat,\n        chatBodyLi,\n        chatMenu\n    },\n    data() {\n        return {\n            currentchat: [],\n            chatmenutoogle: false,\n        }\n    },\n    computed: {\n        ...mapState({\n            currentChat() {\n                return (this.currentchat = this.$store.getters['chat/currentChat']);\n            },\n        }),\n    },\n    methods: {\n        addChat() {\n            var container = this.$el.querySelector(\".chat-history\")\n            setTimeout(function () {\n                container.scrollBy({ top: 200, behavior: 'smooth' });\n            }, 310);\n            setTimeout(function () {\n                container.scrollBy({ top: 200, behavior: 'smooth' });\n            }, 1100);\n        }\n    },\n}\n</script>"],"mappings":"AA6DA,OAAOA,QAAO,MAAO,mBAAkB;AACvC,SAASC,QAAO,QAAS,MAAM;AAC/B,OAAOC,UAAS,MAAO,kBAAkB;AACzC,OAAOC,OAAM,MAAO,eAAc;AAClC,OAAOC,QAAO,MAAO,gBAAe;AACpC,eAAe;EACXC,MAAM,EAAE,CAACL,QAAQ,CAAC;EAClBM,UAAU,EAAE;IACRH,OAAO;IACPD,UAAU;IACVE;EACJ,CAAC;EACDG,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,WAAW,EAAE,EAAE;MACfC,cAAc,EAAE;IACpB;EACJ,CAAC;EACDC,QAAQ,EAAE;IACN,GAAGT,QAAQ,CAAC;MACRU,WAAWA,CAAA,EAAG;QACV,OAAQ,IAAI,CAACH,WAAU,GAAI,IAAI,CAACI,MAAM,CAACC,OAAO,CAAC,kBAAkB,CAAC;MACtE;IACJ,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLX,OAAOA,CAAA,EAAG;MACN,IAAIY,SAAQ,GAAI,IAAI,CAACC,GAAG,CAACC,aAAa,CAAC,eAAe;MACtDC,UAAU,CAAC,YAAY;QACnBH,SAAS,CAACI,QAAQ,CAAC;UAAEC,GAAG,EAAE,GAAG;UAAEC,QAAQ,EAAE;QAAS,CAAC,CAAC;MACxD,CAAC,EAAE,GAAG,CAAC;MACPH,UAAU,CAAC,YAAY;QACnBH,SAAS,CAACI,QAAQ,CAAC;UAAEC,GAAG,EAAE,GAAG;UAAEC,QAAQ,EAAE;QAAS,CAAC,CAAC;MACxD,CAAC,EAAE,IAAI,CAAC;IACZ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}